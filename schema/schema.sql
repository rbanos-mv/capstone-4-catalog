-- CREATE DATABASE
CREATE DATABASE catalog_of_things;

-- 3 CREATE TABLE author
CREATE TABLE author (
    id int,
    first_name varchar(25),
    last_name varchar(25),
    PRIMARY KEY (id)
);
-- 1 CREATE TABLE label
CREATE TABLE label (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    title VARCHAR(250),
    color VARCHAR(250)
);

-- 2 CREATE TABLE genre
CREATE TABLE genre (
  id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name    VARCHAR(100)
);

-- 1 CREATE TABLE book
CREATE TABLE book (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(250),
    publish_date  DATE,
    publihser VARCHAR(250),
    cover_state VARCHAR(250),
    genre_id INT,
    author_id INT,
    label_id INT,
    FOREIGN KEY (genre_id) REFERENCES genre(id),
    FOREIGN KEY (author_id) REFERENCES author(id),
    FOREIGN KEY (label_id) REFERENCES label(id)
);

-- 3 CREATE TABLE game

CREATE TABLE game(
  id              int PRIMARY KEY,
  title           VARCHAR(255),
  publish_date    DATE,
  last_played_at  DATE,
  author_id       INTEGER,
  genre_id        INTEGER,
  label_id        INTEGER,
  multiplayer     BOOLEAN,
  archived        BOOLEAN,
FOREIGN KEY (author_id) REFERENCES author(id),
FOREIGN KEY (genre_id) REFERENCES genre(id),
FOREIGN KEY (label_id) REFERENCES label(id)
);

-- 2 CREATE TABLE music_album
CREATE TABLE music_album(
  id            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  publish_date  DATE,
  archived      BOOLEAN,
  author_id     INTEGER,
  genre_id      INTEGER,
  label_id      INTEGER,
  name          VARCHAR(250),
  on_spotify    BOOLEAN,

  FOREIGN KEY (genre_id) REFERENCES genre(id),
  FOREIGN KEY (author_id) REFERENCES author(id),
  FOREIGN KEY (label_id) REFERENCES label(id)
);

